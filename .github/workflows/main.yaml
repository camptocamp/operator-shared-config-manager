name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+'
    tags:
      - '*'
  pull_request:

permissions:
  actions: write
  contents: write
  packages: write

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - run: docker system prune --all --force
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
          patterns: docker
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - uses: actions/setup-python@v6
        with:
          python-version: '3.14'
      - run: python3 -m pip install --requirement=ci/requirements.txt

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: "pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}\npre-commit-"
      - run: pre-commit run --all-files --color=always
      - run: git diff --exit-code --patch > /tmp/pre-commit.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Apply pre-commit fix.patch
          path: /tmp/pre-commit.patch
          retention-days: 1
        if: failure()
      - name: Print environment information
        run: c2cciutils-env

      - name: Build
        run: make build

      - name: Lint
        run: make prospector

      - name: Install helm
        uses: azure/setup-helm@v4
        with:
          version: 3.10.0
      - run: helm lint .

      - name: Setup k3s/k3d
        run: c2cciutils-k8s-install

      - name: Install external-secret CRD
        run: |
          curl https://raw.githubusercontent.com/external-secrets/external-secrets/v0.16.1/deploy/crds/bundle.yaml --output /tmp/external-secrets-crd.yaml
          kubectl apply -f /tmp/external-secrets-crd.yaml

      - name: Import my image
        run: k3d image import ghcr.io/camptocamp/sharedconfigmanager-operator:latest --cluster=test-cluster

      - run: helm template test --namespace=default --set=image.tag=latest . > template.yaml
      - run: kubectl apply -f template.yaml

      - run: make tests

      - run: c2cciutils-k8s-logs
        if: always()

      - name: Publish
        run: tag-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - run: git diff --exit-code --patch > /tmp/dpkg-versions.patch; git diff --color; git reset --hard || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Update dpkg versions list.patch
          path: /tmp/dpkg-versions.patch
          retention-days: 1
        if: failure()
      - name: Trigger changelog workflow
        uses: actions/github-script@v8
        with:
          script: |-
            if (process.env.GITHUB_REF_TYPE == 'tag') {
                console.log('Trigger changelog');
                await github.rest.repos.createDispatchEvent({
                    owner: 'camptocamp',
                    repo: 'operator-shared-config-manager',
                    event_type: 'changelog',
                });
            }
