---
name: Continuous integration

on:
  push:
  pull_request:

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}

jobs:
  main:
    runs-on: ubuntu-20.04
    name: Continuous integration
    timeout-minutes: 20
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
          patterns: docker
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Checks
        run: c2cciutils-checks

      - name: Build
        run: make build

      - name: Lint
        run: make prospector

      # Instsall helm
      - uses: azure/setup-helm@v1
      - run: helm lint .

      # Setup k3s/ked
      - uses: AbsaOSS/k3d-action@v1.4.0
        with:
          cluster-name: test-cluster-1
      # Import my image
      - run: k3d image import camptocamp/sharedconfigmanager-operator:latest -c test-cluster-1 --verbose

      - run: helm template test . > template.yaml
      - run: kubectl apply -f template.yaml
      #- run: sleep 3
      #- run: kubectl get pods
      #- run: kubectl get pods -o wide
      #- run: kubectl logs -l service=process-ooms
      #- run: kubectl apply -f tests/source.yaml
      #- run: kubectl apply -f tests/config.yaml
      #- run: kubectl get scs
      #- run: kubectl get scc
      #- run: kubectl get cm

      - run: make tests

      - run: ci/k8s-logs
        if: always()

      - name: Publish
        run: c2cciutils-publish
        if: env.HAS_SECRETS == 'HAS_SECRETS'
